From bb0bd89685bf203b5b98a5957be98fb4b7f7a472 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E6=81=92=E7=95=85?= <dongkaiyuan.dky@alibaba-inc.com>
Date: Wed, 13 Mar 2024 03:04:48 +0000
Subject: [PATCH 11/17] Optimize memory management of dmabufs

---
 libavcodec/omxdecoder.c | 18 +++++++++++++-----
 1 file changed, 13 insertions(+), 5 deletions(-)

diff --git a/libavcodec/omxdecoder.c b/libavcodec/omxdecoder.c
index 6ce22eacf0..bf0be00aae 100644
--- a/libavcodec/omxdecoder.c
+++ b/libavcodec/omxdecoder.c
@@ -1475,13 +1475,13 @@ static av_cold int omx_component_init_decoder(AVCodecContext *avctx, const char
     s->plane_size     = in_port_params.format.video.nSliceHeight;
     s->num_in_buffers = in_port_params.nBufferCountMin;
     s->in_buffer_size = in_port_params.nBufferSize;
-    s->num_out_buffers = out_port_params.nBufferCountMin + 5;
+    s->num_out_buffers = out_port_params.nBufferCountMin;
     s->out_buffer_size = out_port_params.nBufferSize;
     s->out_stride       = out_port_params.format.video.nStride;
     s->out_slice_height = out_port_params.format.video.nSliceHeight;
 
     in_port_params.nBufferCountActual = in_port_params.nBufferCountMin;
-    out_port_params.nBufferCountActual = out_port_params.nBufferCountMin + 5;
+    out_port_params.nBufferCountActual = out_port_params.nBufferCountMin;
 
     err = OMX_SetParameter(s->handle, OMX_IndexParamPortDefinition, &in_port_params);
     CHECK(err);
@@ -1490,7 +1490,6 @@ static av_cold int omx_component_init_decoder(AVCodecContext *avctx, const char
 
     s->pkt_upper_bound = out_port_params.nBufferCountMin;
     dump_portdef(s, &in_port_params);
-    dump_portdef(s, &out_port_params);
 
     INIT_STRUCT(formatIn);
     formatIn.nPortIndex = s->in_port;
@@ -1538,6 +1537,10 @@ static av_cold int omx_component_init_decoder(AVCodecContext *avctx, const char
     } else
         av_log(avctx, AV_LOG_INFO, "Set DMA mode at port %d\n", s->out_port);
 
+    if (OMX_ErrorNone != OMX_SendCommand(s->handle, OMX_CommandPortDisable, OMX_DirOutput, NULL)) {
+        av_log(avctx, AV_LOG_ERROR, "Unable to set outport disabled state\n");
+        return AVERROR_UNKNOWN;
+    }
     if (OMX_ErrorNone != OMX_SendCommand(s->handle, OMX_CommandStateSet, OMX_StateIdle, NULL)) {
         av_log(avctx, AV_LOG_ERROR, "Unable to set IDLE state\n");
         return AVERROR_UNKNOWN;
@@ -1569,6 +1572,9 @@ static av_cold int omx_component_init_decoder(AVCodecContext *avctx, const char
     s->num_free_in_buffers =  s->num_in_buffers;
     av_log(avctx, AV_LOG_INFO, "OMX_AllocateBuffer for inputs %d finished\n", s->num_free_in_buffers);
 
+#if 1
+    s->num_out_buffers = 0;
+#else
     //allocate output buffers
     s->out_buffer_headers = av_mallocz(sizeof(OMX_BUFFERHEADERTYPE *) * s->num_out_buffers);
     s->done_out_buffers   = av_mallocz(sizeof(OMX_BUFFERHEADERTYPE *) * s->num_out_buffers);
@@ -1584,6 +1590,7 @@ static av_cold int omx_component_init_decoder(AVCodecContext *avctx, const char
     }
 
     s->num_out_buffers = i;
+#endif
 
 #if 0
     //check if port enabled
@@ -1595,7 +1602,7 @@ static av_cold int omx_component_init_decoder(AVCodecContext *avctx, const char
         OMX_SendCommand(s->handle, OMX_CommandPortEnable, OMX_DirOutput, NULL);
     }
 #endif
-
+    s->num_out_buffers = 0;
     if (wait_for_state(s, OMX_StateIdle) < 0) {
         av_log(avctx, AV_LOG_ERROR, "Didn't get OMX_StateIdle\n");
         return AVERROR_UNKNOWN;
@@ -1608,10 +1615,11 @@ static av_cold int omx_component_init_decoder(AVCodecContext *avctx, const char
         return AVERROR_UNKNOWN;
     }
 
-
+#if 0
     for (i = 0; i < s->num_out_buffers && err == OMX_ErrorNone; i++) {
         err = OMX_FillThisBuffer(s->handle, s->out_buffer_headers[i]);
     }
+#endif
 
     if (err != OMX_ErrorNone) {
         av_log(avctx, AV_LOG_WARNING, "FillOutBuffer failed , so set header\n");
-- 
2.40.1

